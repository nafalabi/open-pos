basePath: /
definitions:
  controller.LoginParams:
    properties:
      email:
        example: admin@admin.com
        type: string
      password:
        example: admin
        type: string
    type: object
  controller.OrderItemPayload:
    properties:
      product_id:
        type: string
      quantity:
        minimum: 1
        type: integer
    required:
    - quantity
    type: object
  controller.OrderPayload:
    properties:
      items:
        items:
          $ref: '#/definitions/controller.OrderItemPayload'
        type: array
      payment_method:
        $ref: '#/definitions/model.PaymentMethod'
      remarks:
        type: string
    type: object
  enum.UserLevel:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - Admin
    - Owner
    - Manager
    - Worker
  model.CategoryFillable:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  model.PaymentMethod:
    enum:
    - cash
    - qris
    - trans
    type: string
    x-enum-varnames:
    - PaymentMethodCash
    - PaymentMethodQris
    - PaymentMethodTransfer
  model.ProductFillable:
    properties:
      categories:
        items:
          type: string
        type: array
      description:
        type: string
      image:
        type: string
      name:
        type: string
      price:
        minimum: 0
        type: number
      stock:
        description: Image       string   `json:"image" validate:"omitempty,uri"`
          // ts types converter cant support uri for now
        minimum: 0
        type: integer
    required:
    - description
    - name
    type: object
  model.UserFillable:
    properties:
      email:
        type: string
      level:
        $ref: '#/definitions/enum.UserLevel'
      name:
        type: string
      password:
        type: string
      phone:
        description: '`json:"phone" validate:"e164"`'
        type: string
    required:
    - level
    - name
    type: object
info:
  contact: {}
  title: Open POS API
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login Params
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.LoginParams'
      produces:
      - application/json
      responses: {}
      summary: Login into the app
      tags:
      - Auth
  /auth/userinfo:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get user logged info
      tags:
      - Auth
  /categories:
    get:
      consumes:
      - application/json
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: page size
        in: query
        name: pagesize
        type: string
      - description: search query
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: list of categories
      tags:
      - Categories
    post:
      consumes:
      - application/json
      parameters:
      - description: Category Data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.CategoryFillable'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Create a new category
      tags:
      - Categories
  /categories/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: delete category by id
      tags:
      - Categories
    get:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: find category by id
      tags:
      - Categories
    patch:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      - description: Category Data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.CategoryFillable'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: update category
      tags:
      - Categories
  /images:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Image File
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: upload image
      tags:
      - Images
  /orders:
    get:
      consumes:
      - application/json
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: page size
        in: query
        name: pagesize
        type: string
      - description: search query
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: list of orders
      tags:
      - Orders
    post:
      consumes:
      - application/json
      parameters:
      - description: Order Data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.OrderPayload'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Create a new order
      tags:
      - Orders
  /products:
    get:
      consumes:
      - application/json
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: page size
        in: query
        name: pagesize
        type: string
      - description: search query
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: list of products
      tags:
      - Products
    post:
      consumes:
      - application/json
      parameters:
      - description: Product Data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.ProductFillable'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Create a new product
      tags:
      - Products
  /products/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: delete product by id
      tags:
      - Products
    get:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: find product by id
      tags:
      - Products
    patch:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Product Data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.ProductFillable'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: update product
      tags:
      - Products
  /users:
    get:
      consumes:
      - application/json
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: page size
        in: query
        name: pagesize
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: list of users
      tags:
      - Users
    post:
      consumes:
      - application/json
      parameters:
      - description: User Data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.UserFillable'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Register a new user
      tags:
      - Users
  /users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: delete user by id
      tags:
      - Users
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: find user by id
      tags:
      - Users
    patch:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User Data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.UserFillable'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: update user
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
